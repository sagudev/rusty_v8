#!/usr/bin/env python

from glob import glob
import subprocess
import os
import string
import sys

HEADER = "# AUTOGENERATED FILE, DON'T EDIT!\n" + \
         "{\n  'variables': {\n    'spidermonkey_files': [\n"
FOOTER = "    ],\n  }\n}"

def main():
    base_dir = get_base_dir()
    spidermonkey_dir = '%s/deps/spidershim/spidermonkey' % base_dir
    ignored = get_ignored_files(base_dir)

    target = open('%s/deps/spidershim/spidermonkey-files.gypi' % base_dir, 'w')
    target.truncate()
    target.write(HEADER)

    for f in get_all_files(spidermonkey_dir):
        if os.path.relpath(f, base_dir) not in ignored:
            f = os.path.relpath(f, '%s/deps/spidershim' % base_dir)
            f = string.replace(f, '$', '$$')
            target.write("      '%s',\n" % f);

    target.write(FOOTER)

    return 0

def run_cmd(cmd):
    try:
        process = subprocess.Popen(cmd.split(" "), stdout=subprocess.PIPE)
        return process.communicate()[0]
    except e:
        return None

def get_base_dir():
    result = run_cmd("git rev-parse --show-toplevel")
    if result is not None:
        return result.strip()
    return None

def get_ignored_files(base_dir):
    pwd = os.getcwd()
    os.chdir(base_dir)
    ignored = run_cmd("git ls-files --others --ignored --exclude-standard")
    if ignored is None:
        ignored = set()
    else:
        ignored = set(ignored.strip().split("\n"))
    others = run_cmd("git ls-files --others --exclude-standard")
    if others is None:
        others = set()
    else:
        others = set(others.strip().split("\n"))
    os.chdir(pwd)
    return ignored | others

def get_all_files(current_path):
    files = []
    for f in glob('%s/*' % current_path):
        if os.path.isfile(f):
            files.append(f)
        elif os.path.isdir(f):
            files += get_all_files(f)
    return sorted(files)

if __name__ == '__main__':
    sys.exit(main())
